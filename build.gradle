// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'

    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        //目前发现gradle升级未3.6.1有问题
        classpath 'com.android.tools.build:gradle:3.5.0'
        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'
        classpath 'com.tencent.bugly:symtabfileuploader:latest.release'

        classpath 'com.novoda:bintray-release:0.9'
        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'
        classpath "com.mob.sdk:MobSDK:2018.0319.1724"

        classpath 'com.jakewharton:butterknife-gradle-plugin:9.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {

        google()
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/" }
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url 'http://developer.huawei.com/repo/' }

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

subprojects {
    project.configurations.all {
        //循环一个个的依赖库
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            //获取当前循环到的依赖库
            def requested = details.requested
            //如果这个依赖库群组的名字是com.android.support
            if (requested.group == 'com.android.support') {
                //且其名字不是以multidex开头的
                if (!requested.name.startsWith("multidex")) {
                    //这里指定需要统一的依赖版本
                    details.useVersion '28.0.0'
                }
            }
        }
    }
}
