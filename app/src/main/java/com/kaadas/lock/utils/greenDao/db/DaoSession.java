package com.kaadas.lock.utils.greenDao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.kaadas.lock.utils.greenDao.bean.CateEyeInfoBase;
import com.kaadas.lock.utils.greenDao.bean.CatEyeEvent;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockAlarmEventDao;
import com.kaadas.lock.utils.greenDao.bean.HistoryInfo;

import com.kaadas.lock.utils.greenDao.db.CateEyeInfoBaseDao;
import com.kaadas.lock.utils.greenDao.db.CatEyeEventDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockAlarmEventDaoDao;
import com.kaadas.lock.utils.greenDao.db.HistoryInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig cateEyeInfoBaseDaoConfig;
    private final DaoConfig catEyeEventDaoConfig;
    private final DaoConfig gatewayLockAlarmEventDaoDaoConfig;
    private final DaoConfig historyInfoDaoConfig;

    private final CateEyeInfoBaseDao cateEyeInfoBaseDao;
    private final CatEyeEventDao catEyeEventDao;
    private final GatewayLockAlarmEventDaoDao gatewayLockAlarmEventDaoDao;
    private final HistoryInfoDao historyInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        cateEyeInfoBaseDaoConfig = daoConfigMap.get(CateEyeInfoBaseDao.class).clone();
        cateEyeInfoBaseDaoConfig.initIdentityScope(type);

        catEyeEventDaoConfig = daoConfigMap.get(CatEyeEventDao.class).clone();
        catEyeEventDaoConfig.initIdentityScope(type);

        gatewayLockAlarmEventDaoDaoConfig = daoConfigMap.get(GatewayLockAlarmEventDaoDao.class).clone();
        gatewayLockAlarmEventDaoDaoConfig.initIdentityScope(type);

        historyInfoDaoConfig = daoConfigMap.get(HistoryInfoDao.class).clone();
        historyInfoDaoConfig.initIdentityScope(type);

        cateEyeInfoBaseDao = new CateEyeInfoBaseDao(cateEyeInfoBaseDaoConfig, this);
        catEyeEventDao = new CatEyeEventDao(catEyeEventDaoConfig, this);
        gatewayLockAlarmEventDaoDao = new GatewayLockAlarmEventDaoDao(gatewayLockAlarmEventDaoDaoConfig, this);
        historyInfoDao = new HistoryInfoDao(historyInfoDaoConfig, this);

        registerDao(CateEyeInfoBase.class, cateEyeInfoBaseDao);
        registerDao(CatEyeEvent.class, catEyeEventDao);
        registerDao(GatewayLockAlarmEventDao.class, gatewayLockAlarmEventDaoDao);
        registerDao(HistoryInfo.class, historyInfoDao);
    }
    
    public void clear() {
        cateEyeInfoBaseDaoConfig.clearIdentityScope();
        catEyeEventDaoConfig.clearIdentityScope();
        gatewayLockAlarmEventDaoDaoConfig.clearIdentityScope();
        historyInfoDaoConfig.clearIdentityScope();
    }

    public CateEyeInfoBaseDao getCateEyeInfoBaseDao() {
        return cateEyeInfoBaseDao;
    }

    public CatEyeEventDao getCatEyeEventDao() {
        return catEyeEventDao;
    }

    public GatewayLockAlarmEventDaoDao getGatewayLockAlarmEventDaoDao() {
        return gatewayLockAlarmEventDaoDao;
    }

    public HistoryInfoDao getHistoryInfoDao() {
        return historyInfoDao;
    }

}
