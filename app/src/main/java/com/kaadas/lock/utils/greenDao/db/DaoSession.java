package com.kaadas.lock.utils.greenDao.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.kaadas.lock.publiclibrary.bean.WifiLockInfo;
import com.kaadas.lock.utils.greenDao.bean.BleLockServiceInfo;
import com.kaadas.lock.utils.greenDao.bean.CateEyeInfoBase;
import com.kaadas.lock.utils.greenDao.bean.CatEyeEvent;
import com.kaadas.lock.utils.greenDao.bean.CatEyeServiceInfo;
import com.kaadas.lock.utils.greenDao.bean.DBOpenLockRecord;
import com.kaadas.lock.utils.greenDao.bean.DevicePower;
import com.kaadas.lock.utils.greenDao.bean.GatewayBaseInfo;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockAlarmEventDao;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockBaseInfo;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockPwd;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockRecord;
import com.kaadas.lock.utils.greenDao.bean.GatewayLockServiceInfo;
import com.kaadas.lock.utils.greenDao.bean.GatewayPasswordPlanBean;
import com.kaadas.lock.utils.greenDao.bean.GatewayServiceInfo;
import com.kaadas.lock.utils.greenDao.bean.HistoryInfo;
import com.kaadas.lock.utils.greenDao.bean.PirDefault;

import com.kaadas.lock.utils.greenDao.db.WifiLockInfoDao;
import com.kaadas.lock.utils.greenDao.db.BleLockServiceInfoDao;
import com.kaadas.lock.utils.greenDao.db.CateEyeInfoBaseDao;
import com.kaadas.lock.utils.greenDao.db.CatEyeEventDao;
import com.kaadas.lock.utils.greenDao.db.CatEyeServiceInfoDao;
import com.kaadas.lock.utils.greenDao.db.DBOpenLockRecordDao;
import com.kaadas.lock.utils.greenDao.db.DevicePowerDao;
import com.kaadas.lock.utils.greenDao.db.GatewayBaseInfoDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockAlarmEventDaoDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockBaseInfoDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockPwdDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockRecordDao;
import com.kaadas.lock.utils.greenDao.db.GatewayLockServiceInfoDao;
import com.kaadas.lock.utils.greenDao.db.GatewayPasswordPlanBeanDao;
import com.kaadas.lock.utils.greenDao.db.GatewayServiceInfoDao;
import com.kaadas.lock.utils.greenDao.db.HistoryInfoDao;
import com.kaadas.lock.utils.greenDao.db.PirDefaultDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig wifiLockInfoDaoConfig;
    private final DaoConfig bleLockServiceInfoDaoConfig;
    private final DaoConfig cateEyeInfoBaseDaoConfig;
    private final DaoConfig catEyeEventDaoConfig;
    private final DaoConfig catEyeServiceInfoDaoConfig;
    private final DaoConfig dBOpenLockRecordDaoConfig;
    private final DaoConfig devicePowerDaoConfig;
    private final DaoConfig gatewayBaseInfoDaoConfig;
    private final DaoConfig gatewayLockAlarmEventDaoDaoConfig;
    private final DaoConfig gatewayLockBaseInfoDaoConfig;
    private final DaoConfig gatewayLockPwdDaoConfig;
    private final DaoConfig gatewayLockRecordDaoConfig;
    private final DaoConfig gatewayLockServiceInfoDaoConfig;
    private final DaoConfig gatewayPasswordPlanBeanDaoConfig;
    private final DaoConfig gatewayServiceInfoDaoConfig;
    private final DaoConfig historyInfoDaoConfig;
    private final DaoConfig pirDefaultDaoConfig;

    private final WifiLockInfoDao wifiLockInfoDao;
    private final BleLockServiceInfoDao bleLockServiceInfoDao;
    private final CateEyeInfoBaseDao cateEyeInfoBaseDao;
    private final CatEyeEventDao catEyeEventDao;
    private final CatEyeServiceInfoDao catEyeServiceInfoDao;
    private final DBOpenLockRecordDao dBOpenLockRecordDao;
    private final DevicePowerDao devicePowerDao;
    private final GatewayBaseInfoDao gatewayBaseInfoDao;
    private final GatewayLockAlarmEventDaoDao gatewayLockAlarmEventDaoDao;
    private final GatewayLockBaseInfoDao gatewayLockBaseInfoDao;
    private final GatewayLockPwdDao gatewayLockPwdDao;
    private final GatewayLockRecordDao gatewayLockRecordDao;
    private final GatewayLockServiceInfoDao gatewayLockServiceInfoDao;
    private final GatewayPasswordPlanBeanDao gatewayPasswordPlanBeanDao;
    private final GatewayServiceInfoDao gatewayServiceInfoDao;
    private final HistoryInfoDao historyInfoDao;
    private final PirDefaultDao pirDefaultDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        wifiLockInfoDaoConfig = daoConfigMap.get(WifiLockInfoDao.class).clone();
        wifiLockInfoDaoConfig.initIdentityScope(type);

        bleLockServiceInfoDaoConfig = daoConfigMap.get(BleLockServiceInfoDao.class).clone();
        bleLockServiceInfoDaoConfig.initIdentityScope(type);

        cateEyeInfoBaseDaoConfig = daoConfigMap.get(CateEyeInfoBaseDao.class).clone();
        cateEyeInfoBaseDaoConfig.initIdentityScope(type);

        catEyeEventDaoConfig = daoConfigMap.get(CatEyeEventDao.class).clone();
        catEyeEventDaoConfig.initIdentityScope(type);

        catEyeServiceInfoDaoConfig = daoConfigMap.get(CatEyeServiceInfoDao.class).clone();
        catEyeServiceInfoDaoConfig.initIdentityScope(type);

        dBOpenLockRecordDaoConfig = daoConfigMap.get(DBOpenLockRecordDao.class).clone();
        dBOpenLockRecordDaoConfig.initIdentityScope(type);

        devicePowerDaoConfig = daoConfigMap.get(DevicePowerDao.class).clone();
        devicePowerDaoConfig.initIdentityScope(type);

        gatewayBaseInfoDaoConfig = daoConfigMap.get(GatewayBaseInfoDao.class).clone();
        gatewayBaseInfoDaoConfig.initIdentityScope(type);

        gatewayLockAlarmEventDaoDaoConfig = daoConfigMap.get(GatewayLockAlarmEventDaoDao.class).clone();
        gatewayLockAlarmEventDaoDaoConfig.initIdentityScope(type);

        gatewayLockBaseInfoDaoConfig = daoConfigMap.get(GatewayLockBaseInfoDao.class).clone();
        gatewayLockBaseInfoDaoConfig.initIdentityScope(type);

        gatewayLockPwdDaoConfig = daoConfigMap.get(GatewayLockPwdDao.class).clone();
        gatewayLockPwdDaoConfig.initIdentityScope(type);

        gatewayLockRecordDaoConfig = daoConfigMap.get(GatewayLockRecordDao.class).clone();
        gatewayLockRecordDaoConfig.initIdentityScope(type);

        gatewayLockServiceInfoDaoConfig = daoConfigMap.get(GatewayLockServiceInfoDao.class).clone();
        gatewayLockServiceInfoDaoConfig.initIdentityScope(type);

        gatewayPasswordPlanBeanDaoConfig = daoConfigMap.get(GatewayPasswordPlanBeanDao.class).clone();
        gatewayPasswordPlanBeanDaoConfig.initIdentityScope(type);

        gatewayServiceInfoDaoConfig = daoConfigMap.get(GatewayServiceInfoDao.class).clone();
        gatewayServiceInfoDaoConfig.initIdentityScope(type);

        historyInfoDaoConfig = daoConfigMap.get(HistoryInfoDao.class).clone();
        historyInfoDaoConfig.initIdentityScope(type);

        pirDefaultDaoConfig = daoConfigMap.get(PirDefaultDao.class).clone();
        pirDefaultDaoConfig.initIdentityScope(type);

        wifiLockInfoDao = new WifiLockInfoDao(wifiLockInfoDaoConfig, this);
        bleLockServiceInfoDao = new BleLockServiceInfoDao(bleLockServiceInfoDaoConfig, this);
        cateEyeInfoBaseDao = new CateEyeInfoBaseDao(cateEyeInfoBaseDaoConfig, this);
        catEyeEventDao = new CatEyeEventDao(catEyeEventDaoConfig, this);
        catEyeServiceInfoDao = new CatEyeServiceInfoDao(catEyeServiceInfoDaoConfig, this);
        dBOpenLockRecordDao = new DBOpenLockRecordDao(dBOpenLockRecordDaoConfig, this);
        devicePowerDao = new DevicePowerDao(devicePowerDaoConfig, this);
        gatewayBaseInfoDao = new GatewayBaseInfoDao(gatewayBaseInfoDaoConfig, this);
        gatewayLockAlarmEventDaoDao = new GatewayLockAlarmEventDaoDao(gatewayLockAlarmEventDaoDaoConfig, this);
        gatewayLockBaseInfoDao = new GatewayLockBaseInfoDao(gatewayLockBaseInfoDaoConfig, this);
        gatewayLockPwdDao = new GatewayLockPwdDao(gatewayLockPwdDaoConfig, this);
        gatewayLockRecordDao = new GatewayLockRecordDao(gatewayLockRecordDaoConfig, this);
        gatewayLockServiceInfoDao = new GatewayLockServiceInfoDao(gatewayLockServiceInfoDaoConfig, this);
        gatewayPasswordPlanBeanDao = new GatewayPasswordPlanBeanDao(gatewayPasswordPlanBeanDaoConfig, this);
        gatewayServiceInfoDao = new GatewayServiceInfoDao(gatewayServiceInfoDaoConfig, this);
        historyInfoDao = new HistoryInfoDao(historyInfoDaoConfig, this);
        pirDefaultDao = new PirDefaultDao(pirDefaultDaoConfig, this);

        registerDao(WifiLockInfo.class, wifiLockInfoDao);
        registerDao(BleLockServiceInfo.class, bleLockServiceInfoDao);
        registerDao(CateEyeInfoBase.class, cateEyeInfoBaseDao);
        registerDao(CatEyeEvent.class, catEyeEventDao);
        registerDao(CatEyeServiceInfo.class, catEyeServiceInfoDao);
        registerDao(DBOpenLockRecord.class, dBOpenLockRecordDao);
        registerDao(DevicePower.class, devicePowerDao);
        registerDao(GatewayBaseInfo.class, gatewayBaseInfoDao);
        registerDao(GatewayLockAlarmEventDao.class, gatewayLockAlarmEventDaoDao);
        registerDao(GatewayLockBaseInfo.class, gatewayLockBaseInfoDao);
        registerDao(GatewayLockPwd.class, gatewayLockPwdDao);
        registerDao(GatewayLockRecord.class, gatewayLockRecordDao);
        registerDao(GatewayLockServiceInfo.class, gatewayLockServiceInfoDao);
        registerDao(GatewayPasswordPlanBean.class, gatewayPasswordPlanBeanDao);
        registerDao(GatewayServiceInfo.class, gatewayServiceInfoDao);
        registerDao(HistoryInfo.class, historyInfoDao);
        registerDao(PirDefault.class, pirDefaultDao);
    }
    
    public void clear() {
        wifiLockInfoDaoConfig.clearIdentityScope();
        bleLockServiceInfoDaoConfig.clearIdentityScope();
        cateEyeInfoBaseDaoConfig.clearIdentityScope();
        catEyeEventDaoConfig.clearIdentityScope();
        catEyeServiceInfoDaoConfig.clearIdentityScope();
        dBOpenLockRecordDaoConfig.clearIdentityScope();
        devicePowerDaoConfig.clearIdentityScope();
        gatewayBaseInfoDaoConfig.clearIdentityScope();
        gatewayLockAlarmEventDaoDaoConfig.clearIdentityScope();
        gatewayLockBaseInfoDaoConfig.clearIdentityScope();
        gatewayLockPwdDaoConfig.clearIdentityScope();
        gatewayLockRecordDaoConfig.clearIdentityScope();
        gatewayLockServiceInfoDaoConfig.clearIdentityScope();
        gatewayPasswordPlanBeanDaoConfig.clearIdentityScope();
        gatewayServiceInfoDaoConfig.clearIdentityScope();
        historyInfoDaoConfig.clearIdentityScope();
        pirDefaultDaoConfig.clearIdentityScope();
    }

    public WifiLockInfoDao getWifiLockInfoDao() {
        return wifiLockInfoDao;
    }

    public BleLockServiceInfoDao getBleLockServiceInfoDao() {
        return bleLockServiceInfoDao;
    }

    public CateEyeInfoBaseDao getCateEyeInfoBaseDao() {
        return cateEyeInfoBaseDao;
    }

    public CatEyeEventDao getCatEyeEventDao() {
        return catEyeEventDao;
    }

    public CatEyeServiceInfoDao getCatEyeServiceInfoDao() {
        return catEyeServiceInfoDao;
    }

    public DBOpenLockRecordDao getDBOpenLockRecordDao() {
        return dBOpenLockRecordDao;
    }

    public DevicePowerDao getDevicePowerDao() {
        return devicePowerDao;
    }

    public GatewayBaseInfoDao getGatewayBaseInfoDao() {
        return gatewayBaseInfoDao;
    }

    public GatewayLockAlarmEventDaoDao getGatewayLockAlarmEventDaoDao() {
        return gatewayLockAlarmEventDaoDao;
    }

    public GatewayLockBaseInfoDao getGatewayLockBaseInfoDao() {
        return gatewayLockBaseInfoDao;
    }

    public GatewayLockPwdDao getGatewayLockPwdDao() {
        return gatewayLockPwdDao;
    }

    public GatewayLockRecordDao getGatewayLockRecordDao() {
        return gatewayLockRecordDao;
    }

    public GatewayLockServiceInfoDao getGatewayLockServiceInfoDao() {
        return gatewayLockServiceInfoDao;
    }

    public GatewayPasswordPlanBeanDao getGatewayPasswordPlanBeanDao() {
        return gatewayPasswordPlanBeanDao;
    }

    public GatewayServiceInfoDao getGatewayServiceInfoDao() {
        return gatewayServiceInfoDao;
    }

    public HistoryInfoDao getHistoryInfoDao() {
        return historyInfoDao;
    }

    public PirDefaultDao getPirDefaultDao() {
        return pirDefaultDao;
    }

}
